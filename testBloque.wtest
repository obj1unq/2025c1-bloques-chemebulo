import bloques.*

describe "pepita volar" {
  test "Primera rutina" {
    roque.ave(pepita)
    
    roque.rutina({ ave =>  ave.comer(alpiste)return ave.volar(5)})
    
    roque.entrenar()
    assert.equals(105, pepita.energia())
  }
  
  test "Segunda rutina" {
    roque.ave(pepita)
    
    roque.rutina({ ave =>  ave.volar(5)ave.comer(alpiste)return ave.volar(5)})
    
    roque.entrenar()
    assert.equals(90, pepita.energia())
    // No es necesario roque.ave().energia() porque en este caso se que ave tiene roque, la defini al principio del test.
  }
  
  test "Tercera rutina" {
    roque.ave(pepita)
    
    roque.rutina(
      { ave =>
        ave.comer(alpiste)
        ave.volar(1000)
        return ave.comer(alpiste)
      }
    )
    
    miAsserter.assertException({ roque.entrenar() })
    // Esto es as√≠ porque estoy esperando que roque.entrenar() rompa.
    assert.equals(120, pepita.energia())
  }
}